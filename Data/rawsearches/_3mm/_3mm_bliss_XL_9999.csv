p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,objective,actually_measured,lookahead,model_name,acquisition_function
 , , ,8,1024,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-12.027401,True,-1,initial_sampling,Random_Sampling
 , , ,256,256,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-79.27443966666667,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-83.47665816666667,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,20,8,20,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-14.323955833333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.83954633333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,256,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-79.37471666666666,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-83.51791666666668,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,8,8,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.871211,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-83.79422,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-83.716142,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-83.53804433333333,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,8,8,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.89216583333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,2048, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.566267,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.9752128333333334,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,2048,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.89482716666667,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,96,32,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-14.954844000000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.70102766666666,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,8,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-79.18319416666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,80,32,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-15.747870833333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,128,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-6.584396666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,2048,2048,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-78.67699783333333,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,2048,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.63408983333333,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,1024,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.592950166666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.59535866666667,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.923117166666666,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.9717758333333335,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-8.7135935,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,64,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-79.35642533333335,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,8,512,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.972824333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,16,512,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-11.476618000000002,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,512,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-12.025366833333331,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-8.825709,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-78.60336283333334,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,8,1024,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-15.276388333333335,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.7241923333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.6723738333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.6802186666666663,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-78.90552433333333,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,8,1024,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-13.796867166666665,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,8,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.88414166666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.50403266666666,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,512,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.15764233333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,100,32, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-46.735881500000005,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,64,100,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-75.1237585,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,32,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-51.72812666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,64,80, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-69.67779949999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,256,100,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-72.54273433333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,2048,32, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-52.28251066666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,256,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-78.84025583333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,256,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-66.42938866666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,32,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.89094933333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,64,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-75.33995816666668,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,50,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.72455633333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,2048,2048,64,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-64.59596366666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,128,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.455657,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,2048,80, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-68.6865505,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",64,2048,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.5931215,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,4,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-81.11005533333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",32,32,64, , , , ,-63.95009716666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,32,32,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-78.93772383333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,2048,80,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.65703583333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,64,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.62187566666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,80,32, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-50.22906633333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,128,16,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-65.90470166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,20,32,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-48.3761515,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,4,2048, , , , ,-82.73103300000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",64,256,20,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-12.866930000000002,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,32,100,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-20.12331216666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,128,20, , , , ,-18.6173285,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,128,512,128, , , , ,-74.459336,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,256,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.49873066666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,2048,32,20,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-5.354518333333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,256,100,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-71.27669083333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,32,256, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-78.63240499999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,1024,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.0674165,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,512,16, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-12.031947833333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.206406047124972,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.680218664399579,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.6858833333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.6854704999999996,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,512,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-16.108067833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,16,20,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-9.6498495,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,50,256,20, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-8.816269500000002,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.6723738422638377,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-7.521761463798558,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-12.245830049104944,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,16,100,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-6.3306333817347635,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.8990989002896828,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,2048,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-4.873845618973531,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,1024,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-5.133436500000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,128,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-7.923582499999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,2048,4, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-13.572190333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-5.568531833333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,20,2048,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-5.311413833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,512,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-0.002423087828900596,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,128,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-5.543914921377365,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,16,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,0.17763184319452432,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,1024,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-10.224618747004705,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,2048,256,16, , , , ,-2.8683600780632243,False,1,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-5.715148500000001,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,16,1024,16,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-11.635896666666666,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.023702,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-6.407739333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-83.33295716666666,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,16,512,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-1.0917946330307515,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-31.012953139235385,False,1,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,8,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,19.05445873284954,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-5.561946166666666,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,8,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-84.75294266666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.994164833333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,16,512,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-81.47803516666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,128,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-74.32718416666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-8.687409666666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,20,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-10.934401166666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,1024,8, , , , ,-2.955792,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.9509501666666664,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-5.4879394999999995,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.8062415310680313,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,512,256, , , , ,-78.14571183333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,100,8, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-9.345158499999998,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,128,1024, , , , ,-81.988333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,96,2048,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-74.97845933333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",4,256,50, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-62.60410116666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,8,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-84.56080516666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,4,32, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-53.73172933333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,4,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-68.585352,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,16,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-83.40436550000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,32,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.4175516666666668,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,1024,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.9889848333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,512,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.002557,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,128,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-74.58385466666665,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,80,512,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-81.00241150000001,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,256,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-20.32610683333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,100,50,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-58.650032833333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,100,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-79.11051383333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,20,128, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-73.89678366666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,20,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.20101716666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,4,100,32,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-49.4220405,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,8,8, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-14.293121,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,4,50,80,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-69.72670749999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,80,16, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-23.883650166666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,20,1024, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.20122883333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,96,8,128,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-75.21700966666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,4,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-81.80641533333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,4,16,32, , , , ,-51.932032,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,512,1024, , , , ,-81.99061816666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,64,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-11.270838,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,2048,20,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-15.018179833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-5.221344666666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,8,512,8, , , , ,-3.0334638333333337,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,16,128,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-16.839218,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-5.656689833333332,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-5.1213355,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-1.6926311279234503,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,16,1024,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-7.5383718033360125,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,0.0,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-7.485552352721376,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,128,2048,50, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),0.0,False,1,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",32,64,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-18.706696833333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,4,50,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-8.271250833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,1024,80,80, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-69.668457,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,32,4, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-9.320659000000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,8,128,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-74.830142,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,8,128,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-74.81897450000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,100,100,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-71.9103315,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,512,512, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-81.125794,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,4,128,50,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-61.93276933333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,96,128,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-66.35826866666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,512, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-81.1999715,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,2048,50, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-59.16172699999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,2048,32,512,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-81.28144033333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-13.300596,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,4,512,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.4800956666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-17.320143666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,16,128,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-76.00595983333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,20,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.084047333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-14.293778833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,100,100,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.476226,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,128,64,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.64547983333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,256,128,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-75.33473416666668,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,8,8, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-14.265398333333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,50,256,100, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-72.33986733333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,8,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-83.49619683333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,1024,8, , , , ,-2.674557,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,4,100, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-73.58971600000001,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,512,20,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.3882483333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,1024,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-65.502483,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,1024,50,32, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-47.32674966666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,8,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-83.56703300000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-78.8172555,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,50,50,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-79.09356583333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,64,64,50,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-60.737019,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,256,1024,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-81.91051316666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",64,50,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-66.1495125,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,80,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.7075716666666665,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,50,1024,50,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-59.51427699999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,100,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-65.80442366666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,50,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.53441933333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.376092,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,512,8, , , , ,-2.9525981666666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,128,20,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.655635166666667,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",4,512,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.82750566666668,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,16,100,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.687958333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,20,2048,1024, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-0.03831075388780346,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,4,128,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.544928,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,512,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-81.13034133333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,512,16,100,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-72.03792700000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,2048,1024, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.94215083333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,1024,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-64.87798816666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,50,16,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-66.38829416666668,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,512,128,4, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-8.0591285,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,20,2048,512,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-81.32129683333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,32,80,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-74.63654416666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,4,128, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-77.41574283333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,4,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-26.03918783333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,64,16, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-15.878558833333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",128,64,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.68539133333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,256,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.49680166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,1024,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.56538716666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
