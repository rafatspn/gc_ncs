p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,objective,actually_measured,lookahead,model_name,acquisition_function
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,512,50,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-59.636555833333325,True,-1,initial_sampling,Random_Sampling
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.855731,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,2048,256,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.74043683333333,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,8,8,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.70132566666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,2048,256,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.75361033333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,256,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.5300015,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-83.72908316666665,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,128,32,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.4131068333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.74214333333333,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.6890615,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.75389366666667,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,512,8,128,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-75.04982333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,2048, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.74596916666665,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,4,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-68.16141983333334,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,512,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.58871900000001,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",32,16,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-11.439638500000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,2048,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-9.947599833333333,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,2048,32,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-50.78294166666666,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
 , , ,96,20,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.8017805,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,64,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.669816,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,256,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.67372066666667,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-79.49149533333333,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,2048,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-83.78974016666668,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-79.356913,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-79.11078533333334,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,128,32,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.76482283333334,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,512,20,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-18.909793,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,20,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.713366666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.57160033333334,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,100,32,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-12.788459000000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,128,32,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.5022563333333334,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,128,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-4.689720833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,1024,32,8, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-6.395044833333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,50,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-11.0278805,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",128,16,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-11.283232333333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,50,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.4546123333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,20,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-5.464086833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.239979,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,32,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.3443703333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-4.842207833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.0558693333333338,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.4521913333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.3597148333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,80,16,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.863493666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,50,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.508205333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,32,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.065838,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.2615106666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,80,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.135973166666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,2048,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.66321533333333,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,80,20, , , , ,-13.259467,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,128,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.1535008333333336,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,128,32,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-3.131232333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,100,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.66849916666665,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,20,50,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-60.94072183333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,128,64,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-65.193977,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,256,80, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-69.56804516666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,2048,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.69727333333334,True,0,"GaussianProcessRegressor(kernel=RationalQuadratic(alpha=1, length_scale=1))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,50,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-79.44587,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,2048,80, , , , ,-68.31975916666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,2048,64,2048, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.80849116666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,20,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.9457210000000003,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,64,512, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-81.093495,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,32,4,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.80354,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,50,80,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-68.09674150000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",32,128,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.64994466666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,16,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-83.37426549999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,80,256,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-79.05199583333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,20,4, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.5275775,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",32,2048,512,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-81.00228433333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",128,64,100, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-71.77826650000002,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,256,80, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-68.320047,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,16,256,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-13.4824195,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,32,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.72362766666667,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,80,20,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.760969,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,64,2048,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-19.90548,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,80,20,8, , , , ,-2.576962,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,20,50,20, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-10.025650166666667,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,20,64,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-0.032484852076974095,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,80,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),0.5829324659097546,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,20,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-2.7289335,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,20,80,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-18.0099305,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,20,64,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-18.424004,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,20,64,32,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-50.25487866666666,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,64,20,16,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-11.981871833333335,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , , ,20,80,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-8.207093,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,16,100,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-20.496053833333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",32,100,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-19.56687033333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,96,2048,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-86.58517683333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,80,20,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-6.718744999999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,96,256,32, , , , ,-47.94809916666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,80,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-11.310139666666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-11.772985166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,100,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-7.824816166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,50,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.7242,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,512,100, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-72.85398566666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,80,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-17.902644833333337,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,1024,2048,20, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-9.353205,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,32,64,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-65.37583099999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,80,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-18.422819,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,16,100,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-73.19602533333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,80,50, , , , ,-58.906568666666665,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,96,20,64, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-65.13194266666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,50,128,80, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-69.36818716666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,32,256,1024,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.136798,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",128,100,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.54973516666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,128,2048,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.8863735,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,100,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-23.332804666666664,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,256,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.70466966666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,2048,100, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-72.67781699999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,100,512,32,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-49.139341333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,50,256, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-78.71238000000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,8,16, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-21.336009833333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,256,20,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-8.967389166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,128,8, , , , ,-10.331025333333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,256,512, , , , ,-80.94212649999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,96,512,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-79.33228566666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,20,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.8908505,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,20,2048,4,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-8.259155666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,128,512,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-75.74218883333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,32,16,50, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-61.11029283333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,80,100, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-71.89060266666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,20,64,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-11.550517,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,20,8,20,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-14.276676333333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,20,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-79.42202583333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,100,20, , , , ,-5.965205666666666,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,20,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-79.67063,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,256,16,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-20.541316,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,2048,20,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-18.324167666666668,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,256,20, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-13.219288666666666,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,80,50,512, , , , ,-80.96836649999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,50,2048,50,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-59.991012500000004,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,16,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-75.79581883333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,256,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-13.222099,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,512,64,32, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-49.87535416666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,50,16,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-19.472595666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,100,128,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-73.89935616666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,96,20,8, , , , ,-2.5850123333333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,64,64,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-13.338959999999998,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,2048,100, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-72.28911766666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",96,80,64,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-65.83109466666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,50,16,128,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-75.44045,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,16,20, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-17.8260215,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",64,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-78.88309733333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,80,20,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.686224833333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-0.12358911884257637,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,256,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.45471383333334,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,2048,256,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.431911,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,512,256,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.494118,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,2048,4,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-80.502865,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,1024,256,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.52995783333334,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,16,256,64,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-0.11584802088440581,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,4,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-0.12747242850488455,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,20, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-12.841192499999998,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",2048,32,128, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-75.086421,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,32,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-82.55869933333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",4,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.87958066666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-79.22189283333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,80,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-78.79189916666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,4,128,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-80.11759133333332,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,4,80,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-80.438949,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,256,64,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-65.62008766666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,16,256,64, , , , ,-64.55848733333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,128,4,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-5.325229,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,100,256,80,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-68.21126166666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",64,16,256, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-78.72866083333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,16,256,64,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-64.53164483333335,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,100,2048, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-82.56235233333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",16,2048,8, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-8.574785499999999,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,128,128,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-73.71131150000001,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,512,2048,64,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-65.49552366666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",80,8,16, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-24.47483783333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",256,128,16, , , , ,-19.228071333333336,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",64,128,20,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-13.123432166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,20,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-20.627192666666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,4,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-79.47600966666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,128,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.878738166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,2048,64,256, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-78.81242966666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,100,256,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.55555683333334,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,100,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.440323166666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",1024,50,20,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-14.176112666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",100,20,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-11.111242666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",8,32,64, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-68.673141,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",50,2048,32,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-50.679938666666665,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,2048,8, ,#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-15.54916,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,96,32,16, ,#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc), ,-18.345747499999998,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,256,2048,64,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-64.64096450000001,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,16,256,16, , , , ,-11.6655785,True,0,"GaussianProcessRegressor(kernel=Matern(length_scale=1, nu=1.5))",ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",512,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-0.2862375672763314,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",128,128,16, , , , ,-18.955055666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), ,"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",128,16,32,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-53.24787533333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,8,100,256,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), , ,-79.26273666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc),"#pragma clang loop(i1,j1,k1,i2,j2) interchange permutation(j1,k1,i1,j2,i2)",20,32,4, , ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-9.309353,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc),#pragma clang loop(i1) pack array(B) allocate(malloc), ,32,16,2048, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-82.713255,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,128,20,4, , , , ,-4.267899666666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 ,#pragma clang loop(i1) pack array(B) allocate(malloc), ,1024,512,8,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc), ,#pragma clang loop(i1) pack array(F) allocate(malloc),-10.5066735,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,100,50,2048,#pragma clang loop(j2) pack array(C) allocate(malloc),#pragma clang loop(i1) pack array(D) allocate(malloc),#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-82.60162916666665,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,128,256,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-78.44723516666666,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,100,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.948556833333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,8,4,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-81.92502116666667,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,1024,2048,256, , , , ,-78.38216916666667,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,2048,4,256, , , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-79.24639733333333,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,2048,2048,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-78.3432475,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,2048,4,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-80.37032483333333,True,0,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
 , , ,256,100,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,7.155375177829331,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,100,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,7.155374302994461,False,1,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,2048,512,256,#pragma clang loop(j2) pack array(C) allocate(malloc), , , ,-31.16688791004387,False,1,GaussianProcessRegressor(kernel=DotProduct(sigma_0=1) + WhiteKernel(noise_level=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,256,80,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc),#pragma clang loop(i1) pack array(F) allocate(malloc),-4.581177333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,100,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.4855731666666667,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,4,100,4,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-3.785225333333333,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
 , , ,256,80,8,#pragma clang loop(j2) pack array(C) allocate(malloc), ,#pragma clang loop(j2) pack array(E) allocate(malloc), ,-2.5681508333333336,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
#pragma clang loop(j2) pack array(A) allocate(malloc), , ,80,100,8,#pragma clang loop(j2) pack array(C) allocate(malloc), , ,#pragma clang loop(i1) pack array(F) allocate(malloc),-4.6226910000000005,True,0,GaussianProcessRegressor(kernel=RBF(length_scale=1)),ei
